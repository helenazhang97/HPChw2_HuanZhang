1. Comments have been added to the code.
2. I ran my code on crunchy3.cims.nyu.edu. The time of block size 4 x 4, 16 x 16, 64 x 64 is shown as below.
================================4 x 4====================================
 Dimension       Time    Gflop/s       GB/s        Error
         4   0.961369   2.080366   8.321465 0.000000e+00
        52   0.730346   2.738440   8.425970 0.000000e+00
       100   0.838593   2.387332   7.257490 0.000000e+00
       148   0.887536   2.257291   6.832880 0.000000e+00
       196   0.892465   2.244184   6.778352 0.000000e+00
       244   1.042080   1.923745   5.802771 0.000000e+00
       292   1.288255   1.584749   4.775957 0.000000e+00
       340   1.406638   1.452974   4.376016 0.000000e+00
       388   1.783071   1.179313   3.550097 0.000000e+00
       436   2.273504   0.947845   2.852230 0.000000e+00
       484   2.848155   0.716547   2.155564 0.000000e+00
       532   3.341251   0.630890   1.897415 0.000000e+00
       580   2.229941   1.049958   3.157115 0.000000e+00
       628   2.019250   1.226560   3.687493 0.000000e+00
       676   2.510943   0.984222   2.958491 0.000000e+00
       724   2.978716   0.764430   2.297514 0.000000e+00
       772   4.486248   0.615347   1.849228 0.000000e+00
       820   4.060605   0.543139   1.632066 0.000000e+00
       868   5.290607   0.494440   1.485599 0.000000e+00
       916   4.002701   0.768057   2.307524 0.000000e+00
       964   5.557826   0.644742   1.936902 0.000000e+00
      1012   3.095704   0.669595   2.011431 0.000000e+00
      1060   3.749832   0.635237   1.908108 0.000000e+00
      1108   4.168090   0.652698   1.960450 0.000000e+00
      1156   4.705186   0.656639   1.972189 0.000000e+00
      1204   5.417552   0.644327   1.935122 0.000000e+00
      1252   6.253034   0.627700   1.885106 0.000000e+00
      1300   9.970401   0.440704   1.323469 0.000000e+00
      1348   9.423686   0.519851   1.561096 0.000000e+00
      1396  12.095183   0.449856   1.350858 0.000000e+00
      1444   9.601117   0.627205   1.883354 0.000000e+00
      1492  11.542896   0.575469   1.727949 0.000000e+00
      1540  12.063048   0.605529   1.818160 0.000000e+00
      1588  13.208604   0.606352   1.820582 0.000000e+00
      1636  14.274324   0.613514   1.842041 0.000000e+00
      1684  15.788754   0.604935   1.816241 0.000000e+00
      1732  18.515024   0.561241   1.685019 0.000000e+00
      1780  17.990360   0.626975   1.882334 0.000000e+00
      1828  19.648626   0.621765   1.866656 0.000000e+00
      1876  21.212417   0.622499   1.868823 0.000000e+00
      1924  22.684330   0.627942   1.885130 0.000000e+00
      1972  24.844366   0.617338   1.853265 0.000000e+00

================================16 x 16====================================
 Dimension       Time    Gflop/s       GB/s        Error
        16   0.837467   2.388159   2.388159 0.000000e+00
        64   0.841363   2.377284   1.931543 0.000000e+00
       112   0.846610   2.363093   1.856716 0.000000e+00
       160   0.868286   2.311495   1.791409 0.000000e+00
       208   0.883637   2.281204   1.754772 0.000000e+00
       256   1.015078   1.983361   1.518510 0.000000e+00
       304   0.909027   2.225239   1.698208 0.000000e+00
       352   0.910090   2.204457   1.678394 0.000000e+00
       400   0.956199   2.141814   1.627779 0.000000e+00
       448   1.077334   2.003065   1.520183 0.000000e+00
       496   1.098050   2.000301   1.516357 0.000000e+00
       544   1.155484   1.950567   1.477267 0.000000e+00
       592   0.981749   2.113316   1.599266 0.000000e+00
       640   1.131753   1.853012   1.401340 0.000000e+00
       688   1.220012   2.135460   1.614010 0.000000e+00
       736   1.096505   2.181594   1.648052 0.000000e+00
       784   1.367967   2.113606   1.595988 0.000000e+00
       832   1.138362   2.023717   1.527517 0.000000e+00
       880   1.330607   2.048604   1.545765 0.000000e+00
       928   1.535855   2.081391   1.570015 0.000000e+00
       976   1.808478   2.056346   1.550687 0.000000e+00
      1024   2.654893   0.808878   0.609818 0.000000e+00
      1072   1.230785   2.001852   1.508859 0.000000e+00
      1120   1.425858   1.970643   1.485020 0.000000e+00
      1168   1.586589   2.008602   1.513331 0.000000e+00
      1216   1.804773   1.992545   1.500963 0.000000e+00
      1264   2.100672   1.922707   1.448115 0.000000e+00
      1312   2.385265   1.893629   1.425995 0.000000e+00
      1360   2.574966   1.953778   1.471080 0.000000e+00
      1408   2.811262   1.985805   1.494995 0.000000e+00
      1456   3.138871   1.966712   1.480437 0.000000e+00
      1504   3.579334   1.900953   1.430770 0.000000e+00
      1552   3.910449   1.911959   1.438897 0.000000e+00
      1600   4.099309   1.998385   1.503785 0.000000e+00
      1648   4.461448   2.006438   1.509699 0.000000e+00
      1696   4.840660   2.015593   1.516449 0.000000e+00
      1744   5.289815   2.005529   1.508747 0.000000e+00
      1792   6.370577   1.806614   1.358993 0.000000e+00
      1840   6.215442   2.004525   1.507751 0.000000e+00
      1888   6.683233   2.013953   1.514732 0.000000e+00
      1936   7.217537   2.010745   1.512213 0.000000e+00
      1984   7.775799   2.008676   1.510557 0.000000e+00

================================64 x 64====================================
Dimension       Time    Gflop/s       GB/s        Error
        64   0.687582   2.908973   0.727243 0.000000e+00
       128   0.823068   2.430762   0.531729 0.000000e+00
       192   0.698659   2.877111   0.599398 0.000000e+00
       256   1.039343   1.937057   0.393465 0.000000e+00
       320   0.715103   2.841012   0.568202 0.000000e+00
       384   0.888270   2.294833   0.454186 0.000000e+00
       448   0.827739   2.607064   0.512102 0.000000e+00
       512   1.586113   1.353929   0.264439 0.000000e+00
       576   0.865053   2.650978   0.515468 0.000000e+00
       640   0.921376   2.276108   0.440996 0.000000e+00
       704   0.783931   2.670494   0.515891 0.000000e+00
       768   1.489422   1.824808   0.351656 0.000000e+00
       832   0.853297   2.699789   0.519190 0.000000e+00
       896   1.249242   2.303230   0.442138 0.000000e+00
       960   1.328909   2.663044   0.510417 0.000000e+00
      1024   1.424438   1.507601   0.288564 0.000000e+00
      1088   0.976363   2.638186   0.504359 0.000000e+00
      1152   1.359103   2.249754   0.429641 0.000000e+00
      1216   1.320357   2.723575   0.519629 0.000000e+00
      1280   2.325326   1.803749   0.343840 0.000000e+00
      1344   1.761654   2.756177   0.524986 0.000000e+00
      1408   2.348324   2.377277   0.452493 0.000000e+00
      1472   2.295660   2.778727   0.528562 0.000000e+00
      1536   4.102413   1.766706   0.335858 0.000000e+00
      1600   2.934885   2.791251   0.530338 0.000000e+00
      1664   3.874151   2.378556   0.451697 0.000000e+00
      1728   3.700267   2.788869   0.529369 0.000000e+00
      1792   6.203190   1.855363   0.352022 0.000000e+00
      1856   4.606791   2.775655   0.526417 0.000000e+00
      1920   6.094843   2.322583   0.440323 0.000000e+00
      1984   5.614122   2.782103   0.527253 0.000000e+00
================================256 x 256====================================
Dimension       Time    Gflop/s       GB/s        Error
       256   1.703275   1.181997   0.073875 0.000000e+00
       512   2.456551   0.874186   0.047807 0.000000e+00
       768   2.066243   1.315387   0.068510 0.000000e+00
      1024   2.199047   0.976552   0.049591 0.000000e+00
      1280   2.517812   1.665853   0.083293 0.000000e+00
      1536   7.536662   0.961667   0.047582 0.000000e+00
      1792   6.245862   1.842687   0.090489 0.000000e+00
From the result we can see that as the larger the block size is, the less the matrix
multiplication is memory-bounded. However, as the block size goes larger, the latency
reading each block is getting slower, probably because L1 cache is not enough to store
the block matrix, and thus it is stored in L2 or even L3, where reading and writing is
slower than in L1. Thus there is an optimal choice and in my experiment, it is 64 x 64.

I did not do the openmp part since the material has not been covered in class before 
the deadline. I will do it after we discuss about it in class.

We estimate the peak FLOP-rate by taking the biggest value in Gflop/s column in the tables.
(2.908973 Gflop/s) Then we find for 4 x 4 block size, we can only achieve about 20% of peak 
rate when dimension is large. In 16 x 16, 64 x 64, 256 x 256, the 
percentages are respectively around 60%, 80%, 50%. When block size is small, as matrix 
dimensions goes large, the percentage goes low very quickly as the memory-bounded effect
comes into play. When block size is big, the percentage tends to sustain around some level.

3. I improve the accuracy to 12-digits for the AVX (and also SSE for historical reason) part
of the function sin4_intrin().The error is 6.928125e-12 for AVX.
